use sales;

-- 	1 . Create a loop for a table to insert a record into a tale for two columns in first coumn you have to 
--     inset a data ranging from 1 to 100 and in second column you hvae to inset a square of the first column 
create table loop_table_pra(`first` int, `second` int);

DELIMITER $$
create procedure insert_REC1()
Begin
set @var  = 1;
generate_data : loop
insert into loop_table_pra(`first`,`second`) values (@var,@var*@var);
set @var = (@var + 1);
if @var  = 101 then 
	leave generate_data;
end if ;
end loop generate_data;
End $$
call insert_REC1();
select * from loop_table_pra;

-- 	2 . create a user defined function to find out a date differences in number of days 

DELIMITER $$
create function date_difference(ship_date_new date, order_date_new date )
RETURNS INT 
DETERMINISTIC 
BEGIN
	declare diff_date int;
	set diff_date = ship_date_new - order_date_new;
	return diff_date;
end $$

select ship_date_new, order_date_new, date_difference(ship_date_new, order_date_new) from sales;


 --    3 . create a UDF to find out a log base 10 of any given number 
 
 DELIMITER $$
create function int_log(a int)
RETURNS FLOAT
DETERMINISTIC 
BEGIN
	declare b FLOAT;
	set b = log10(a) ;
	return b;
end $$

select int_log(15);
 
 --     4 . create a UDF which will be able to check a total number of records avaible in your table 

DELIMITER $$
CREATE function no_rec()
RETURNS INT 
DETERMINISTIC 
BEGIN
declare l int;
SET l = (SELECT count(*) FROM sales) ;
return l;
end $$

SELECT no_rec( );


 --    5 . create a procedure to find out  5th highest profit in your sales table you dont have to use rank and windowing function 
 
 DELIMITER $$
CREATE PROCEDURE highest_5()
BEGIN
select*from sales order by profit desc limit 4,1;
end $$
CALL highest_5();


